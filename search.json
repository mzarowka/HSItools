[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 HSItools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/shiny_gui.html","id":"initial-setup","dir":"Articles","previous_headings":"","what":"Initial setup","title":"Graphical user interface with Shiny","text":"Hyperspectral data gets quite large. good practice process data stored SSD drive separate Operating System (OS). data stored separate drive, beneficial instruct terra store temporary data separate drive. Adjust according OS. , using non-system drive Windows 11.","code":"# Set tempdir terra::terraOptions(tempdir = \"D:/\") #> Warning: [options] you cannot set the tempdir to a path that does not exist  # Check it terra::terraOptions() #> memfrac   : 0.6 #> tolerance : 0.1 #> verbose   : FALSE #> todisk    : FALSE #> tempdir   : /tmp/RtmpKMHvSC #> datatype  : FLT4S #> memmin    : 1 #> progress  : 3"},{"path":"/articles/shiny_gui.html","id":"run-graphical-interface","dir":"Articles","previous_headings":"","what":"Run graphical interface","title":"Graphical user interface with Shiny","text":"Due spatial nature hyperspectral imaging, choices, selecting regions interest (ROI), need made using graphical user interface. Let’s call Shiny app store output core object environment.","code":"core <- run_core()"},{"path":"/articles/shiny_gui.html","id":"normalize-or-use-reflectance","dir":"Articles","previous_headings":"Run graphical interface","what":"Normalize or use REFLECTANCE","title":"Graphical user interface with Shiny","text":"Specim (Specim Spectral Imaging LTD.) different generations available software, can run normalization procedure use --fly reflectance file produced newer software iterations. Shiny app provides choice. main difference first selection Shiny app. Remember data comprises dark white references captured data, can use workflow data types.","code":""},{"path":[]},{"path":[]},{"path":"/articles/workflow.html","id":"basic-workflow","dir":"Articles","previous_headings":"","what":"Basic workflow","title":"Basic workflow","text":"","code":"# Load run_core() output  core <- readRDS(\"C:/GitHub/data/STL14_1A_28C_top_2022-11-11_16-30-51/HSItools_core.rds\")"},{"path":[]},{"path":"/articles/workflow.html","id":"normalization","dir":"Articles","previous_headings":"Preprocessing","what":"Normalization","title":"Basic workflow","text":"spectral indices properties calculated, normalizing data expressing reflectance necessary. can plot RGB preview stage.","code":"# Here we use run_core() output, so further function arguments are filled automatically. # Output is written to the file. reflectance <- core |>   prepare_core() #>  #> ── STL14_1A_28C_top_2022-11-11_16-30-51 ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #> ℹ 2024-02-24 18:18:51: reading rasters. #> ℹ 2024-02-24 18:18:51: subsetting layers. #> ℹ 2024-02-24 18:18:51: cropping rasters. #> → Dark reference #>  |---------|---------|---------|---------| =========================================                                              #> → Captured data #>  |---------|---------|---------|---------| =========================================                                              #> → White reference #>  |---------|---------|---------|---------| =========================================                                              #> ℹ 2024-02-24 18:18:52: calculating reference rasters. #> → Aggregate DARKREF #> → Disaggregate DARKREF #>  |---------|---------|---------|---------|                                               #> → Aggregate WHITEREF #> → Disaggregate WHITEREF #>  |---------|---------|---------|---------|                                               #> ℹ 2024-02-24 18:19:29: calculating reflectance raster. #>  |---------|---------|---------|---------| =========================================                                              #> ℹ 2024-02-24 18:19:30: cleaning up. #> ✔ 2024-02-24 18:19:30: finished. plot_raster_rgb(reflectance) #>  #> ── REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51 ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"/articles/workflow.html","id":"spectral-smoothing","dir":"Articles","previous_headings":"Preprocessing","what":"Spectral smoothing","title":"Basic workflow","text":"Applying spectral smoothing, Savitzky-Golay spectral filter, good idea. Spurious, random peaks influence calculation results. can plot RGB preview stage, .","code":"reflectance_smooth <- reflectance |>   # Specify the file extension   filter_savgol() #>  #> ── REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51 ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #> ℹ 2024-02-24 18:19:31: calculating Savitzky-Golay filtered raster. #>  |---------|---------|---------|---------| =========================================                                              #> ✔ 2024-02-24 18:19:31: finished. plot_raster_rgb(reflectance_smooth) #>  #> ── REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"/articles/workflow.html","id":"peek-into-spectra","dir":"Articles","previous_headings":"Preprocessing","what":"Peek into spectra","title":"Basic workflow","text":"plots look similar scale except noisy UV blue. can zoom , preferably flat region.","code":"# Spectral profile from the entire ROI reflectance_sp <- reflectance |>   # Use HSItools function to extract the profile   extract_spectral_profile() |>   # Pivot longer so for plotting   tidyr::pivot_longer(     dplyr::everything(),     names_to = \"band\",     values_to = \"reflectance\",     names_transform = readr::parse_number)  # Peek into data head(reflectance_sp) #> # A tibble: 6 × 2 #>    band reflectance #>   <dbl>       <dbl> #> 1  396.      0.108  #> 2  397       0.105  #> 3  398.      0.100  #> 4  400.      0.0997 #> 5  401.      0.0978 #> 6  403.      0.0987  # Spectral profile from the entire ROI reflectance_smooth_sp <- reflectance_smooth |>   # Use HSItools function to extract the profile   extract_spectral_profile() |>   # Pivot longer so for plotting   tidyr::pivot_longer(     dplyr::everything(),     names_to = \"band\",     values_to = \"reflectance_sg\",     names_transform = readr::parse_number)  # Peek into data head(reflectance_smooth_sp) #> # A tibble: 6 × 2 #>    band reflectance_sg #>   <dbl>          <dbl> #> 1  396.         0.108  #> 2  397          0.105  #> 3  398.         0.102  #> 4  400.         0.100  #> 5  401.         0.0980 #> 6  403.         0.0962  # Plot both profiles data sp_compare <- dplyr::left_join(   reflectance_sp,   reflectance_smooth_sp,   dplyr::join_by(band)) |>   tidyr::pivot_longer(     -band,     names_to = \"type\",     values_to = \"reflectance\") |>   ggplot2::ggplot(aes(band, reflectance, color = type)) +   ggplot2::geom_line() +   ggplot2::scale_x_continuous(breaks = scales::pretty_breaks()) +   ggplot2::labs(     x = \"Wavelength (nm)\",     y = \"Reflectance\",     color = \"Spectrum type\") +   ggplot2::theme_bw() +   ggplot2::theme(legend.position = \"bottom\")  # Print sp_compare # Zoom by limits sp_compare +   ggplot2::coord_cartesian(     xlim = c(600, 650),     ylim = c(0.1330, 0.1360))"},{"path":"/articles/workflow.html","id":"continuum-removal","dir":"Articles","previous_headings":"Preprocessing","what":"Continuum removal","title":"Basic workflow","text":"can process data removing continuum, follows rule dividing spectrum bounding box. way, spectrum becomes flatter.","code":"# Calculate reflectance with removed continuum # Use the smoothed spectrum reflectance_cr <- reflectance_smooth |>   remove_continuum() #>  #> ── REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #> ℹ 2024-02-24 18:19:32: calculating continuum removed raster. #> Warning in f(names[[col]]): NAs introduced by coercion #>  |---------|---------|---------|---------| ============================= #> Warning in regularize.values(x, y, ties, missing(ties), na.rm = na.rm): collapsing to unique 'x' values #> ========== #> Warning in regularize.values(x, y, ties, missing(ties), na.rm = na.rm): collapsing to unique 'x' values #> ==                                              #> ✔ 2024-02-24 18:19:33: finished."},{"path":"/articles/workflow.html","id":"index-calculation","dir":"Articles","previous_headings":"","what":"Index calculation","title":"Basic workflow","text":"point, OK calculate selected indices proxies. Mean reflectance (Rmean)","code":"rmean <- reflectance_smooth |>   calculate_rmean() #>  #> ── REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #> → Writing RMEAN to C:/GitHub/data/STL14_1A_28C_top_2022-11-11_16-30-51/products/RMEAN_REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay.tif. plot_rmean <- rmean |>   plot_raster_proxy(     hsi_index = names(rmean),     palette = \"mako\") #>  #> ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  # Print plot_rmean"},{"path":"/articles/workflow.html","id":"relative-absorption-band-depth-rabd-","dir":"Articles","previous_headings":"Index calculation","what":"Relative Absorption Band Depth (RABD).","title":"Basic workflow","text":"variations RABD calculation, generally, results drastically different. Let’s calculate one common indices estimate total chloropigments-- RABD660670. can use predefined values provide manually. Let’s calculate three different flavors. name output informs calculated proxy additional modifications reflectance file; , see calculated Savitzky-Golay smoothed reflectance.","code":""},{"path":"/articles/workflow.html","id":"variant-1-max","dir":"Articles","previous_headings":"Index calculation > Relative Absorption Band Depth (RABD).","what":"Variant 1: max","title":"Basic workflow","text":"variant, pixel, minimum reflectance found trough flexibly used calculations. Plot. Hyperspectral imaging data fun visualized. use “viridis” palettes.","code":"rabd660670max <- reflectance_smooth |>   # Calculate max variant   calculate_rabd(     edges = proxies$rabd_b660b670$edges,     trough = proxies$rabd_b660b670$trough,     rabd_name = proxies$rabd_b660b670$proxy_name,     rabd_type = \"max\") #>  #> ── REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #> → Writing rabd660670_max to C:/GitHub/data/STL14_1A_28C_top_2022-11-11_16-30-51/products/rabd660670_max_REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay.tif. # Prepare the plot plot_rabd660670max <- rabd660670max |>   plot_raster_proxy(     hsi_index = names(rabd660670max),     palette = \"viridis\") #>  #> ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  # Print plot_rabd660670max"},{"path":"/articles/workflow.html","id":"variant-2-strict","dir":"Articles","previous_headings":"Index calculation > Relative Absorption Band Depth (RABD).","what":"Variant 2: strict","title":"Basic workflow","text":"classic variant supplies specific wavelength calculate RABD every pixel.","code":"rabd665 <- reflectance_smooth |>   # Calculate max variant   calculate_rabd(     edges = proxies$rabd_b660b670$edges,     trough = 665,     rabd_name = proxies$rabd_b660b670$proxy_name,     rabd_type = \"strict\") #>  #> ── REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #> → Writing rabd660670_strict to C:/GitHub/data/STL14_1A_28C_top_2022-11-11_16-30-51/products/rabd660670_strict_REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay.tif. # Prepare the plot plot_rabd665 <- rabd665 |>   plot_raster_proxy(     hsi_index = names(rabd665),     palette = \"viridis\") #>  #> ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  # Print plot_rabd665"},{"path":"/articles/workflow.html","id":"variant-3-midpoint","dir":"Articles","previous_headings":"Index calculation > Relative Absorption Band Depth (RABD).","what":"Variant 3: midpoint","title":"Basic workflow","text":"variant 2 (strict), added shortcut always finding middle point edges.","code":"rabd660670mid <- reflectance_smooth |>   # Calculate max variant   calculate_rabd(     edges = proxies$rabd_b660b670$edges,     trough = proxies$rabd_b660b670$trough,     rabd_name = proxies$rabd_b660b670$proxy_name,     rabd_type = \"mid\") #>  #> ── REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #> → Writing rabd660670_mid to C:/GitHub/data/STL14_1A_28C_top_2022-11-11_16-30-51/products/rabd660670_mid_REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay.tif. # Prepare the plot plot_rabd660670mid <- rabd660670mid |>   plot_raster_proxy(     hsi_index = names(rabd660670mid),     palette = \"viridis\") #>  #> ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  # Print plot_rabd660670mid"},{"path":"/articles/workflow.html","id":"compare","dir":"Articles","previous_headings":"Index calculation > Relative Absorption Band Depth (RABD).","what":"Compare","title":"Basic workflow","text":"can compare three plots side side. ’re using patchwork. Similar, identical. expected!","code":"plot_rabd660670max + plot_rabd665 + plot_rabd660670mid + patchwork::plot_layout(nrow = 1)"},{"path":[]},{"path":"/articles/workflow.html","id":"band-ratios","dir":"Articles","previous_headings":"Index calculation","what":"Band ratios","title":"Basic workflow","text":"Another popular straightforward indices band ratios, reflectance wavelength X divided reflectance wavelength Y.","code":"ratio_570630 <- reflectance_smooth |>   calculate_band_ratio(     edges = proxies$ratio_b570b630$edges,     ratio_name = proxies$ratio_b570b630$proxy_name) #>  #> ── REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #> → Writing r570r630 to C:/GitHub/data/STL14_1A_28C_top_2022-11-11_16-30-51/products/r570r630_REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay.tif. plot_ratio570630 <- ratio_570630 |>   plot_raster_proxy(     hsi_index = names(ratio_570630),     palette = \"magma\") #>  #> ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  plot_ratio570630"},{"path":"/articles/workflow.html","id":"band-differences","dir":"Articles","previous_headings":"Index calculation","what":"Band differences","title":"Basic workflow","text":"","code":"difference_650675 <- reflectance_smooth |>   calculate_band_difference(     difference_name = proxies$diff_b650b675$proxy_name,     edges = proxies$diff_b650b675$edges) #>  #> ── REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #> → Writing r570r630 to C:/GitHub/data/STL14_1A_28C_top_2022-11-11_16-30-51/products/r570r630_REFLECTANCE_STL14_1A_28C_top_2022-11-11_16-30-51_savitzky-golay.tif. plot_difference_650675 <- difference_650675 |>   plot_raster_proxy(     hsi_index = names(difference_650675),     palette = \"cividis\") #>  #> ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  plot_difference_650675"},{"path":"/articles/workflow.html","id":"derivatives","dir":"Articles","previous_headings":"Index calculation","what":"Derivatives","title":"Basic workflow","text":"","code":"# derivative_690 <- reflectance_smooth |> #   calculate_derivative(derivative_name = proxies$deriv_b690)"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maurycy Żarczyński. Author, maintainer. Nicholas McKay. Author. David Edge. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Żarczyński M, McKay N, Edge D (2024). HSItools: Process, Analyze Visualize Hyperspectral Core Scanning Data. R package version 0.0.0.9008, https://github.com/mzarowka/HSItools.","code":"@Manual{,   title = {HSItools: Process, Analyze and Visualize Hyperspectral Core Scanning Data},   author = {Maurycy Żarczyński and Nicholas McKay and David Edge},   year = {2024},   note = {R package version 0.0.0.9008},   url = {https://github.com/mzarowka/HSItools}, }"},{"path":"/index.html","id":"hsitools","dir":"","previous_headings":"","what":"Process, Analyze and Visualize Hyperspectral Core Scanning Data","title":"Process, Analyze and Visualize Hyperspectral Core Scanning Data","text":"HSItools R package process visualize hyperspectral core scanning data.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Process, Analyze and Visualize Hyperspectral Core Scanning Data","text":"can install development version HSItools like :","code":"# install.packages(\"pak\")  # pak::pak(\"mzarowka/HSItools)"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Process, Analyze and Visualize Hyperspectral Core Scanning Data","text":"basic workflow includes running shiny app choose analysis options visually interact core image. , reflectance calculated subsequent operations use reflectance subsets. Maurycy Żarczyński founded Polish National Agency Academic Exchange (BPN/BEK/2021/1/00133).","code":"library(HSItools)  # Run shiny app and store results for further processing core <- run_core()  # Get reflectance, normalize the capture reflectance <- core |>   prepare_core()  # Create RGB preview and write to file rgb_preview <- reflectance |>   stretch_raster_full(reflectance, ext = \"tif\", write = TRUE)  # Plot RGB preview rgb_plot <- reflectance |>   plot_raster_rgb(reflectance)"},{"path":"/reference/calculate_band_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate band difference — calculate_band_difference","title":"Calculate band difference — calculate_band_difference","text":"calculate band difference selected wavelengths.","code":""},{"path":"/reference/calculate_band_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate band difference — calculate_band_difference","text":"","code":"calculate_band_difference(   raster,   difference_name,   edges,   extent = NULL,   ext = NULL,   filename = NULL )"},{"path":"/reference/calculate_band_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate band difference — calculate_band_difference","text":"raster terra SpatRaster normalized capture data. difference_name character, lower case name calculated difference. edges numeric vector two difference. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename NULL (default) write automatically products, provide full path ext override.","code":""},{"path":"/reference/calculate_band_difference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate band difference — calculate_band_difference","text":"one layer terra SpatRaster calculated difference values","code":""},{"path":"/reference/calculate_band_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate band ratio — calculate_band_ratio","title":"Calculate band ratio — calculate_band_ratio","text":"calculate band ratio selected wavelengths.","code":""},{"path":"/reference/calculate_band_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate band ratio — calculate_band_ratio","text":"","code":"calculate_band_ratio(   raster,   ratio_name,   edges,   extent = NULL,   ext = NULL,   filename = NULL )"},{"path":"/reference/calculate_band_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate band ratio — calculate_band_ratio","text":"raster terra SpatRaster normalized capture data. ratio_name character, lower case name calculated ratio. edges numeric vector two (numerator denominator). extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename NULL (default) write automatically products, provide full path ext override.","code":""},{"path":"/reference/calculate_band_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate band ratio — calculate_band_ratio","text":"one layer terra SpatRaster calculated ratio values.","code":""},{"path":"/reference/calculate_derivative.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate derivative — calculate_derivative","title":"Calculate derivative — calculate_derivative","text":"calculate derivative.","code":""},{"path":"/reference/calculate_derivative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate derivative — calculate_derivative","text":"","code":"calculate_derivative(   raster,   derivative_name,   edges,   extent = NULL,   ext = NULL,   filename = NULL )"},{"path":"/reference/calculate_derivative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate derivative — calculate_derivative","text":"raster terra SpatRaster normalized capture data. derivative_name character, lower case name calculated difference. edges numeric vector two difference. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename NULL (default) write automatically products, provide full path ext override.","code":""},{"path":"/reference/calculate_derivative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate derivative — calculate_derivative","text":"one layer terra SpatRaster calculated derivative values.","code":""},{"path":"/reference/calculate_lambdaremp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate lambdaREMP — calculate_lambdaremp","title":"Calculate lambdaREMP — calculate_lambdaremp","text":"Calculate lambdaREMP. wavelength number 660 680 nm, first derivative equals zero. Ghanbari, H., Zilkey, D.R., Gregory-Eaves, ., Antoniades, D., 2023. new index rapid generation chlorophyll time series hyperspectral imaging sediment cores. Limnology Oceanography: Methods 21, 703–717. https://doi.org/10.1002/lom3.10576.","code":""},{"path":"/reference/calculate_lambdaremp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate lambdaREMP — calculate_lambdaremp","text":"","code":"calculate_lambdaremp(   raster,   trough = c(660, 680),   extent = NULL,   ext = NULL,   filename = NULL )"},{"path":"/reference/calculate_lambdaremp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate lambdaREMP — calculate_lambdaremp","text":"raster terra SpatRaster normalized capture data. trough character vector wavelength look trough. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename NULL (default) write automatically products, provide full path ext override.","code":""},{"path":"/reference/calculate_lambdaremp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate lambdaREMP — calculate_lambdaremp","text":"one layer terra SpatRaster calculated lambdaREMP values.","code":""},{"path":"/reference/calculate_raba.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Relative Absorption Band Area (RABA) — calculate_raba","title":"Calculate Relative Absorption Band Area (RABA) — calculate_raba","text":"Calculate Relative Absorption Band Area (RABA)","code":""},{"path":"/reference/calculate_raba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Relative Absorption Band Area (RABA) — calculate_raba","text":"","code":"calculate_raba(   raster,   raba_name,   edges,   trough,   extent = NULL,   ext = NULL,   filename = NULL )"},{"path":"/reference/calculate_raba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Relative Absorption Band Area (RABA) — calculate_raba","text":"raster terra SpatRaster normalized capture data. raba_name character, lower case name name calculated RABA. edges numeric vector two wide calculation window. trough character vector wavelength look trough. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename NULL (default) write automatically products, provide full path ext override.","code":""},{"path":"/reference/calculate_raba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Relative Absorption Band Area (RABA) — calculate_raba","text":"one layer terra SpatRaster calculated RABA values.","code":""},{"path":"/reference/calculate_rabd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Relative Absorption Band Depth (RABD) — calculate_rabd","title":"Calculate Relative Absorption Band Depth (RABD) — calculate_rabd","text":"Calculate Relative Absorption Band Depth (RABD)","code":""},{"path":"/reference/calculate_rabd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Relative Absorption Band Depth (RABD) — calculate_rabd","text":"","code":"calculate_rabd(   raster,   rabd_name,   rabd_type = \"max\",   edges,   trough,   extent = NULL,   ext = NULL,   filename = NULL )"},{"path":"/reference/calculate_rabd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Relative Absorption Band Depth (RABD) — calculate_rabd","text":"raster terra SpatRaster normalized capture data. rabd_name character, lower case name name calculated RABD. rabd_type character, lower case, type RABD. One \"strict\" - specific wavelength, \"max\" - flexible choice maximum reflectance dip, \"mid\" - middle point min max trough wavelength (similar strict). edges numeric vector two wide calculation window. trough character vector wavelength look trough. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename NULL (default) write automatically products, provide full path ext override.","code":""},{"path":"/reference/calculate_rabd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Relative Absorption Band Depth (RABD) — calculate_rabd","text":"one layer terra SpatRaster calculated RABD values","code":""},{"path":"/reference/calculate_rmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Rmean — calculate_rmean","title":"Calculate Rmean — calculate_rmean","text":"calculate mean reflectance layers given pixel.","code":""},{"path":"/reference/calculate_rmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Rmean — calculate_rmean","text":"","code":"calculate_rmean(raster, extent = NULL, ext = NULL, filename = NULL)"},{"path":"/reference/calculate_rmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Rmean — calculate_rmean","text":"raster terra SpatRaster normalized capture data. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename NULL (default) write automatically products, provide full path ext override.","code":""},{"path":"/reference/calculate_rmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Rmean — calculate_rmean","text":"one layer terra SpatRaster calculated Rmean values.","code":""},{"path":"/reference/change_output_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust paths from Shiny output — change_output_dir","title":"Adjust paths from Shiny output — change_output_dir","text":"Adjust paths Shiny output","code":""},{"path":"/reference/change_output_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust paths from Shiny output — change_output_dir","text":"","code":"change_output_dir(run_core_output)"},{"path":"/reference/change_output_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust paths from Shiny output — change_output_dir","text":"run_core_output","code":""},{"path":"/reference/change_output_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust paths from Shiny output — change_output_dir","text":"run_core_output","code":""},{"path":"/reference/change_output_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust paths from Shiny output — change_output_dir","text":"","code":"a1 <- readRDS(file.path(system.file(package = \"HSItools\"),\"extdata/HSItools_core.rds\")) change_output_dir(a1) #> Error in choose.dir(caption = paste0(\"Find the directory with the name: \",     basename(run_core_output$directory))): could not find function \"choose.dir\""},{"path":"/reference/create_normalized_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster normalization — create_normalized_raster","title":"Raster normalization — create_normalized_raster","text":"apply normalization function combination capture reference SpatRasters using terra spatial dataset.","code":""},{"path":"/reference/create_normalized_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster normalization — create_normalized_raster","text":"","code":"create_normalized_raster(   capture = capture,   whiteref = whiteref,   darkref = darkref,   fun = normalization,   ... )"},{"path":"/reference/create_normalized_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster normalization — create_normalized_raster","text":"capture terra SpatRaster captured data. whiteref terra SpatRaster white reference matching capture extent. darkref terra SpatRaster dark reference matching capture extent. fun function apply: normalization. ... additional arguments.","code":""},{"path":"/reference/create_normalized_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster normalization — create_normalized_raster","text":"normalized terra SpatRaster capture.","code":""},{"path":"/reference/create_reference_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Create reference SpatRaster — create_reference_raster","title":"Create reference SpatRaster — create_reference_raster","text":"Creating reference SpatRaster covering core extent Create one mean reference row SpatRaster averaging data every column aggregation Create reference SpatRaster matching capture SpatRaster extent disaggregation.","code":""},{"path":"/reference/create_reference_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create reference SpatRaster — create_reference_raster","text":"","code":"create_reference_raster(raster, roi, ref_type, ...)"},{"path":"/reference/create_reference_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create reference SpatRaster — create_reference_raster","text":"raster terra SpatRaster captured reference. roi Region Interest: extent match data raster. ref_type type reference, one \"whiteref\" \"darkref\". ... additional arguments.","code":""},{"path":"/reference/create_reference_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create reference SpatRaster — create_reference_raster","text":"terra SpatRaster reference matching data raster extent.","code":""},{"path":"/reference/defineRGB.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose the layers to use for plotting red, green, and blue — defineRGB","title":"Choose the layers to use for plotting red, green, and blue — defineRGB","text":"Choose layers use plotting red, green, blue","code":""},{"path":"/reference/defineRGB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose the layers to use for plotting red, green, and blue — defineRGB","text":"","code":"defineRGB(wavelengths)"},{"path":"/reference/defineRGB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose the layers to use for plotting red, green, and blue — defineRGB","text":"wavelengths vector 3 wavelengths used RGB.","code":""},{"path":"/reference/defineRGB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose the layers to use for plotting red, green, and blue — defineRGB","text":"best matched layers three colors","code":""},{"path":"/reference/extract_spectral_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract spectral indices — extract_spectral_indices","title":"Extract spectral indices — extract_spectral_indices","text":"Extract spectral indices","code":""},{"path":"/reference/extract_spectral_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract spectral indices — extract_spectral_indices","text":"","code":"extract_spectral_indices(   raster,   .hsi_index = NULL,   .extent = NULL,   .write = FALSE )"},{"path":"/reference/extract_spectral_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract spectral indices — extract_spectral_indices","text":"raster terra SpatRaster normalized capture data. .hsi_index character indicating hyperspectral index layer plot. .extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. .write optional, output written csv file.","code":""},{"path":"/reference/extract_spectral_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract spectral indices — extract_spectral_indices","text":"tibble averaged value multiple values spectral indices.","code":""},{"path":"/reference/extract_spectral_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract spectral profile from the ROI — extract_spectral_profile","title":"Extract spectral profile from the ROI — extract_spectral_profile","text":"Extract spectral profile ROI","code":""},{"path":"/reference/extract_spectral_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract spectral profile from the ROI — extract_spectral_profile","text":"","code":"extract_spectral_profile(raster, extent = NULL, write = FALSE)"},{"path":"/reference/extract_spectral_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract spectral profile from the ROI — extract_spectral_profile","text":"raster terra SpatRaster normalized capture data. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. write optional, output written csv file.","code":""},{"path":"/reference/extract_spectral_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract spectral profile from the ROI — extract_spectral_profile","text":"tibble averaged spectral profile.","code":""},{"path":"/reference/extract_spectral_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract average proxy series from ROI — extract_spectral_series","title":"Extract average proxy series from ROI — extract_spectral_series","text":"Extract average proxy series ROI","code":""},{"path":"/reference/extract_spectral_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract average proxy series from ROI — extract_spectral_series","text":"","code":"extract_spectral_series(   raster,   index = NULL,   calibration = NULL,   extent = NULL,   ext = NULL,   filename = NULL )"},{"path":"/reference/extract_spectral_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract average proxy series from ROI — extract_spectral_series","text":"raster terra SpatRaster one layer calculated values. index character indicating hyperspectral index layer plot. calibration result pixel_to_distance actual call pixel_to_distance appropriate input. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename empty = memory, TRUE = guess name attempt write, user specified path glue ext.","code":""},{"path":"/reference/extract_spectral_series.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract average proxy series from ROI — extract_spectral_series","text":"tibble frame XY coordinates averaged proxy values.","code":""},{"path":"/reference/filter_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth raster with focal median — filter_median","title":"Smooth raster with focal median — filter_median","text":"Smooth raster focal median","code":""},{"path":"/reference/filter_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth raster with focal median — filter_median","text":"","code":"filter_median(   raster = raster,   window = 3,   extent = NULL,   ext = NULL,   filename = NULL )"},{"path":"/reference/filter_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth raster with focal median — filter_median","text":"raster terra SpatRaster smooth. window focal window size, default 3. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename NULL (default) write automatically products, provide full path ext override.","code":""},{"path":"/reference/filter_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth raster with focal median — filter_median","text":"smoothed SpatRaster","code":""},{"path":"/reference/filter_savgol.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a Savitzky-Golay smoothing filter — filter_savgol","title":"Apply a Savitzky-Golay smoothing filter — filter_savgol","text":"Smooth data Savitzky-Golay smoothing filter using sgolayfilt.","code":""},{"path":"/reference/filter_savgol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a Savitzky-Golay smoothing filter — filter_savgol","text":"","code":"filter_savgol(   raster,   p = 3,   n = p + 13 - p%%2,   m = 0,   ts = 1,   extent = NULL,   ext = NULL,   filename = NULL )"},{"path":"/reference/filter_savgol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a Savitzky-Golay smoothing filter — filter_savgol","text":"raster terra SpatRaster normalized data p filter order. n filter length (must odd). m return m-th derivative filter coefficients. ts time scaling factor. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename NULL (default) write automatically products, provide full path ext override.","code":""},{"path":"/reference/filter_savgol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a Savitzky-Golay smoothing filter — filter_savgol","text":"filtered terra SpatRaster.","code":""},{"path":"/reference/normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster normalization: calculation — normalization","title":"Raster normalization: calculation — normalization","text":"normalize captured hyperspectral data white dark reference according equation Butz et al. 2016.","code":""},{"path":"/reference/normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster normalization: calculation — normalization","text":"","code":"normalization(capture = capture, whiteref = whiteref, darkref = darkref)"},{"path":"/reference/normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster normalization: calculation — normalization","text":"capture terra SpatRaster captured data. whiteref terra SpatRaster white reference matching capture extent. darkref terra SpatRaster dark reference matching capture extent.","code":""},{"path":"/reference/normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster normalization: calculation — normalization","text":"normalized terra SpatRaster capture.","code":""},{"path":"/reference/pixel_to_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Get depth in metric units — pixel_to_distance","title":"Get depth in metric units — pixel_to_distance","text":"Get depth metric units","code":""},{"path":"/reference/pixel_to_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get depth in metric units — pixel_to_distance","text":"","code":"pixel_to_distance(   core,   pixel_ratio,   ymax,   ymin = 0,   sample_start,   sample_end,   extent = NULL )"},{"path":"/reference/pixel_to_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get depth in metric units — pixel_to_distance","text":"core run_core output. provided fills pixel_ratio, sample_start sample_end. Exclusive pixel_ratio. pixel_ratio source conversion factor, manually input. Exclusive pixel_ratio. ymax pixel value top. ymin pixel value bottom, default 0. sample_start position sample beginning (point zero), either run_core output manually input. sample_end position sample end, either run_core output manually input. extent terra extent terra SpatVector used subset SpatRaster. Defaults entire SpatRaster.","code":""},{"path":"/reference/pixel_to_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get depth in metric units — pixel_to_distance","text":"lookup table depths.","code":""},{"path":"/reference/plot_composite.html","id":null,"dir":"Reference","previous_headings":"","what":"Composite hyperspectral indices plots\nCan composite line profiles and SpatRasters — plot_composite","title":"Composite hyperspectral indices plots\nCan composite line profiles and SpatRasters — plot_composite","text":"Composite hyperspectral indices plots Can composite line profiles SpatRasters","code":""},{"path":"/reference/plot_composite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Composite hyperspectral indices plots\nCan composite line profiles and SpatRasters — plot_composite","text":"","code":"plot_composite(raster, plots, ext = NULL, write = FALSE)"},{"path":"/reference/plot_composite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Composite hyperspectral indices plots\nCan composite line profiles and SpatRasters — plot_composite","text":"raster SpatRaster REFLECTANCE file. Used correct placement. plots list plots. ext character, graphic format extension. write logical, resulting ggplot2 object written file.","code":""},{"path":"/reference/plot_composite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Composite hyperspectral indices plots\nCan composite line profiles and SpatRasters — plot_composite","text":"plot.","code":""},{"path":"/reference/plot_profile_spectral_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Line plot of spectral profile from the ROI — plot_profile_spectral_profile","title":"Line plot of spectral profile from the ROI — plot_profile_spectral_profile","text":"Line plot spectral profile ROI","code":""},{"path":"/reference/plot_profile_spectral_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line plot of spectral profile from the ROI — plot_profile_spectral_profile","text":"","code":"plot_profile_spectral_profile(raster, extent = NULL, ext = NULL, write = FALSE)"},{"path":"/reference/plot_profile_spectral_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line plot of spectral profile from the ROI — plot_profile_spectral_profile","text":"raster Reflectance SpatRaster. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. write logical, resulting SpatRaster written file.","code":""},{"path":"/reference/plot_profile_spectral_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Line plot of spectral profile from the ROI — plot_profile_spectral_profile","text":"line plot selected hyperspectral index.","code":""},{"path":"/reference/plot_profile_spectral_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Line plots of calculated proxies series — plot_profile_spectral_series","title":"Line plots of calculated proxies series — plot_profile_spectral_series","text":"Line plots calculated proxies series","code":""},{"path":"/reference/plot_profile_spectral_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line plots of calculated proxies series — plot_profile_spectral_series","text":"","code":"plot_profile_spectral_series(   raster,   hsi_index,   calibration = NULL,   extent = NULL,   ext = NULL,   filename = FALSE )"},{"path":"/reference/plot_profile_spectral_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line plots of calculated proxies series — plot_profile_spectral_series","text":"raster SpatRaster calculated hyperspectral indices RGB layers. hsi_index character indicating hyperspectral index layer plot. calibration result pixel_to_distance actual call pixel_to_distance appropriate input. extent terra extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename empty = memory, TRUE = guess name attempt write, user specified path glue ext.","code":""},{"path":"/reference/plot_profile_spectral_series.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Line plots of calculated proxies series — plot_profile_spectral_series","text":"line plot selected hyperspectral index.","code":""},{"path":"/reference/plot_raster_overlay.html","id":null,"dir":"Reference","previous_headings":"","what":"Overlay color plot of proxy on RGB — plot_raster_overlay","title":"Overlay color plot of proxy on RGB — plot_raster_overlay","text":"Overlay color plot proxy RGB","code":""},{"path":"/reference/plot_raster_overlay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overlay color plot of proxy on RGB — plot_raster_overlay","text":"","code":"plot_raster_overlay(   raster,   hsi_index,   palette =     c(\"viridis”, “magma”, “plasma”, “inferno”, “civids”, “mako”, “rocket”, “turbo\"),   alpha = 0.5,   extent = NULL,   ext = NULL,   write = FALSE )"},{"path":"/reference/plot_raster_overlay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overlay color plot of proxy on RGB — plot_raster_overlay","text":"raster raster SpatRaster calculated hyperspectral indices RGB layers. hsi_index character indicating hyperspectral index layer plot. palette character indicating one viridis palettes choice: \"viridis”, “magma”, “plasma”, “inferno”, “civids”, “mako”, “rocket” “turbo”. alpha number (0, 1) controlling transparency. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. write logical, resulting SpatRaster written file.","code":""},{"path":"/reference/plot_raster_overlay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overlay color plot of proxy on RGB — plot_raster_overlay","text":"plot color map selected hyperspectral index overlain RGB image.","code":""},{"path":"/reference/plot_raster_proxy.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial map plots of calculated proxies, and optionally save to file — plot_raster_proxy","title":"Plot spatial map plots of calculated proxies, and optionally save to file — plot_raster_proxy","text":"Plot spatial map plots calculated proxies, optionally save file","code":""},{"path":"/reference/plot_raster_proxy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial map plots of calculated proxies, and optionally save to file — plot_raster_proxy","text":"","code":"plot_raster_proxy(   raster,   hsi_index,   calibration = NULL,   palette = c(\"viridis\", \"magma\", \"plasma\", \"inferno\", \"civids\", \"mako\", \"rocket\",     \"turbo\"),   extent = NULL,   ext = NULL,   write = FALSE,   ... )"},{"path":"/reference/plot_raster_proxy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial map plots of calculated proxies, and optionally save to file — plot_raster_proxy","text":"raster SpatRaster calculated hyperspectral indices RGB layers. hsi_index character indicating hyperspectral index layer plot. calibration result pixel_to_distance actuall call pixel_to_distance appropriate input. palette character indicating one viridis palettes choice: \"viridis\", \"magma\", \"plasma\", \"inferno\", \"civids\", \"mako\", \"rocket\" \"turbo”. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. write logical, resulting SpatRaster written file.","code":""},{"path":"/reference/plot_raster_proxy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot spatial map plots of calculated proxies, and optionally save to file — plot_raster_proxy","text":"plot color map selected hyperspectral index.","code":""},{"path":"/reference/plot_raster_rgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial map plots of RGB image — plot_raster_rgb","title":"Spatial map plots of RGB image — plot_raster_rgb","text":"Spatial map plots RGB image","code":""},{"path":"/reference/plot_raster_rgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial map plots of RGB image — plot_raster_rgb","text":"","code":"plot_raster_rgb(   raster,   calibration = NULL,   extent = NULL,   ext = NULL,   write = FALSE )"},{"path":"/reference/plot_raster_rgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial map plots of RGB image — plot_raster_rgb","text":"raster SpatRaster calculated hyperspectral indices RGB layers just RGB layers. calibration result pixel_to_distance actuall call pixel_to_distance appropriate input. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. write logical, resulting SpatRaster written file.","code":""},{"path":"/reference/plot_raster_rgb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial map plots of RGB image — plot_raster_rgb","text":"plot color map selected hyperspectral index.","code":""},{"path":"/reference/prepare_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare core based on shiny output — prepare_core","title":"Prepare core based on shiny output — prepare_core","text":"Prepare core based shiny output","code":""},{"path":"/reference/prepare_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare core based on shiny output — prepare_core","text":"","code":"prepare_core(   core = NULL,   path = NULL,   layers = NULL,   extent = NULL,   normalize = TRUE,   integration = NULL )"},{"path":"/reference/prepare_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare core based on shiny output — prepare_core","text":"core shiny output. path path directory captured data. Defaults NULL shiny output. layers numeric vector, selection layers (wavelengths) use. Defaults NULL shiny output. extent extent captured data. Defaults NULL shiny output. \"capture\" uses entire extent captured data. normalize logical, data normalized. integration logical, wether references scanned different settings.","code":""},{"path":"/reference/prepare_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare core based on shiny output — prepare_core","text":"reflectance SpatRaster.","code":""},{"path":"/reference/proxies.html","id":null,"dir":"Reference","previous_headings":"","what":"Preset proxies settings — proxies","title":"Preset proxies settings — proxies","text":"Preset proxies settings","code":""},{"path":"/reference/proxies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preset proxies settings — proxies","text":"","code":"proxies"},{"path":[]},{"path":"/reference/proxies.html","id":"proxies","dir":"Reference","previous_headings":"","what":"Proxies","title":"Preset proxies settings — proxies","text":"list properties proxies proxy_type Type proxy, RABD, RABA proxy_name character specyfing name proxy edges Spectral edges, wavelength numbers trough Spectral trough, wavelength numbers reference Bibliographic entry reference interpretation Typical interpretation proxy","code":""},{"path":"/reference/proxies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Preset proxies settings — proxies","text":"selection based available literature.","code":""},{"path":"/reference/raster_crop.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop SpatRaster — raster_crop","title":"Crop SpatRaster — raster_crop","text":"Crop SpatRaster large ROI (entire core) capture (core) SpatRaster use full extent reference (white dark) SpatRaster use x-direction.","code":""},{"path":"/reference/raster_crop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop SpatRaster — raster_crop","text":"","code":"raster_crop(raster, type, dir = NULL, roi)"},{"path":"/reference/raster_crop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop SpatRaster — raster_crop","text":"raster terra SpatRaster cropped. type either data raster reference raster. dir directory. roi Region Interest: cropping extent.","code":""},{"path":"/reference/raster_crop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop SpatRaster — raster_crop","text":"terra SpatRaster cropped ROI.","code":""},{"path":"/reference/remove_continuum.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove continuum from spectrum — remove_continuum","title":"Remove continuum from spectrum — remove_continuum","text":"Remove continuum spectrum","code":""},{"path":"/reference/remove_continuum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove continuum from spectrum — remove_continuum","text":"","code":"remove_continuum(raster, extent = NULL, ext = NULL, filename = NULL, ...)"},{"path":"/reference/remove_continuum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove continuum from spectrum — remove_continuum","text":"raster terra SpatRaster normalized capture data. extent extent SpatVector used subset SpatRaster. Defaults entire SpatRaster. ext character, graphic format extension. filename NULL (default) write automatically products, provide full path ext override. ... additional arguments.","code":""},{"path":"/reference/remove_continuum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove continuum from spectrum — remove_continuum","text":"one layer terra SpatRaster continuum removed.","code":""},{"path":"/reference/roi_to_vect.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SpatVector from Shiny ROIs — roi_to_vect","title":"Create SpatVector from Shiny ROIs — roi_to_vect","text":"Create SpatVector Shiny ROIs","code":""},{"path":"/reference/roi_to_vect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SpatVector from Shiny ROIs — roi_to_vect","text":"","code":"roi_to_vect(data)"},{"path":"/reference/roi_to_vect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SpatVector from Shiny ROIs — roi_to_vect","text":"data run_core output ROIs.","code":""},{"path":"/reference/roi_to_vect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create SpatVector from Shiny ROIs — roi_to_vect","text":"SpatVector object suitable plotting setting extents.","code":""},{"path":"/reference/run_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Run shiny app to set up core image analysis parameters — run_core","title":"Run shiny app to set up core image analysis parameters — run_core","text":"Run shiny app set core image analysis parameters","code":""},{"path":"/reference/run_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run shiny app to set up core image analysis parameters — run_core","text":"","code":"run_core(autoSave = TRUE)"},{"path":"/reference/run_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run shiny app to set up core image analysis parameters — run_core","text":"autoSave save shiny app output rds file. Defaults true. Saves current working directory.","code":""},{"path":"/reference/run_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run shiny app to set up core image analysis parameters — run_core","text":"object processing settings.","code":""},{"path":"/reference/spectra_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Find position of selected spectra — spectra_position","title":"Find position of selected spectra — spectra_position","text":"find index position nearest spectra (band) dataset. Match lowest difference integer band actual SpatRaster band. produce duplicates multiple bands. Drop.","code":""},{"path":"/reference/spectra_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find position of selected spectra — spectra_position","text":"","code":"spectra_position(raster, spectra)"},{"path":"/reference/spectra_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find position of selected spectra — spectra_position","text":"raster terra SpatRaster. spectra vector choice desired spectra.","code":""},{"path":"/reference/spectra_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find position of selected spectra — spectra_position","text":"positions (indices) desired spectra SpatRaster","code":""},{"path":"/reference/spectra_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset SpatRaster by spectra — spectra_sub","title":"Subset SpatRaster by spectra — spectra_sub","text":"subset SpatRaster spectra (bands) positions.","code":""},{"path":"/reference/spectra_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset SpatRaster by spectra — spectra_sub","text":"","code":"spectra_sub(raster, spectra_tbl)"},{"path":"/reference/spectra_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset SpatRaster by spectra — spectra_sub","text":"raster terra SpatRaster subset. spectra_tbl tibble spectra positions spectra_position.","code":""},{"path":"/reference/spectra_sub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset SpatRaster by spectra — spectra_sub","text":"SpatRaster subset contain required spectral bands.","code":""},{"path":"/reference/stretch_raster_full.html","id":null,"dir":"Reference","previous_headings":"","what":"Stretch and optionally save full RGB preview of SpatRaster — stretch_raster_full","title":"Stretch and optionally save full RGB preview of SpatRaster — stretch_raster_full","text":"Stretch optionally save full RGB preview SpatRaster","code":""},{"path":"/reference/stretch_raster_full.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stretch and optionally save full RGB preview of SpatRaster — stretch_raster_full","text":"","code":"stretch_raster_full(raster, ext = NULL, write = TRUE)"},{"path":"/reference/stretch_raster_full.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stretch and optionally save full RGB preview of SpatRaster — stretch_raster_full","text":"raster SpatRaster, preferably reflectance file. ext character, graphic format extension. write logical, resulting SpatRaster written file.","code":""},{"path":"/news/index.html","id":"hsitools-development-version","dir":"Changelog","previous_headings":"","what":"HSItools (development version)","title":"HSItools (development version)","text":"Initial GitHub.","code":""}]
